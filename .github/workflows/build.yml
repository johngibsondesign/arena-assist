name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0, v1.1.0, etc.
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Electron app
      run: npm run build
      env:
        # This is needed for code signing on macOS and Windows
        # You can add these later if you want code signing
        CSC_LINK: ${{ secrets.CSC_LINK }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        # For Windows code signing
        WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
        WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
        # GitHub token for publishing to releases
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}
        path: |
          release/*.exe
          release/*.dmg
          release/*.AppImage
          release/*.zip
          release/*.tar.gz
          release/latest*.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist-windows-latest/*.exe
          dist-windows-latest/*.zip
          dist-windows-latest/latest*.yml
          dist-macos-latest/*.dmg
          dist-macos-latest/*.zip
          dist-macos-latest/latest*.yml
          dist-ubuntu-latest/*.AppImage
          dist-ubuntu-latest/*.tar.gz
          dist-ubuntu-latest/latest*.yml
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 